name: Build and Sign

on:
  push:
    branches:
      - main

jobs:
  build_and_sign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker Image
        id: docker_build
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/financial-web-app:latest
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build \
            --file ./Dockerfile.build \
            --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_NAME \
            --output=type=registry \
            --push .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Get Image Digest
        run: |
          DIGEST=$(docker buildx imagetools inspect ${{ env.IMAGE_NAME }} | grep Digest | sed 's/Digest: //')
          echo "DIGEST=$DIGEST" >> $GITHUB_ENV

      - name: Install Cosign
        run: |
          wget https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -O cosign
          chmod +x cosign
          sudo mv cosign /usr/local/bin/

      - name: Decode and Store Cosign Key
        run: |
          echo ${{ secrets.COSIGN_PRIVATE_KEY_BASE64 }} | base64 -d > cosign.key
          chmod 600 cosign.key

      - name: Sign Docker Image with Digest
        run: |
          export COSIGN_PASSWORD=${{ secrets.COSIGN_KEY_PASSPHRASE }}
          cosign sign -y --key cosign.key ${{ env.DIGEST }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_KEY_PASSPHRASE }}

      - name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ${{ env.IMAGE_NAME }}
